//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

include "apex/engine/events/mouse.galaxy"
include "apex/engine/events/keypress.galaxy"
include "apex/engine/events/chat.galaxy"
include "apex/engine/events/player_leaves.galaxy"
include "apex/engine/events/region_waygates.galaxy"
include "apex/engine/events/unit_events.galaxy"
include "apex/engine/events/custom.galaxy"
include "apex/engine/stat_bars.galaxy"
include "apex/engine/api.galaxy"
include "apex/engine/events/ticker.galaxy"


// create the default Apex events
void LibapxEventsInitialize() {
	// player leaves event
	TriggerAddEventPlayerLeft(TriggerCreate("LibapxPlayerLeaves"), c_playerAny, c_gameResultUndecided);

	// mouse related events
	TriggerAddEventMouseMoved(TriggerCreate("LibapxMouseMoved"), c_playerAny );
	TriggerAddEventMouseClicked(TriggerCreate("LibapxMouseLeftCLickedDown"), c_playerAny, c_mouseButtonLeft, true);
	TriggerAddEventMouseClicked(TriggerCreate("LibapxMouseRightClickedDown"), c_playerAny, c_mouseButtonRight, true);
	TriggerAddEventMouseClicked(TriggerCreate("LibapxMouseRightClickedUp"), c_playerAny, c_mouseButtonRight, false);

	// key press (up and down) events
	TriggerAddEventKeyPressed(TriggerCreate("LibapxKeyPressedDown"), c_playerAny, c_keyNone, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
	TriggerAddEventKeyPressed(TriggerCreate("LibapxKeyPressedUp"), c_playerAny, c_keyNone, false, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);

	// unit initialization events (functions found in unit.galaxy)
	TriggerAddEventUnitCreated(TriggerCreate("LibapxUnitInitialize"), null, null, null);
	TriggerAddEventUnitRemoved(TriggerCreate("LibapxUnitDeathCleanup"), null);
	TriggerAddEventUnitDied(TriggerCreate("LibapxUnitDeathCleanup"), null);

	// region waygate and waygate dialog events
	TriggerAddEventTimePeriodic(TriggerCreate("LibapxWaygateDialogManager"), 1.0, c_timeGame);
	//TriggerAddEventDialogControl(TriggerCreate("LibapxWaygateDialogClickedOld"), c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick );
	TriggerAddEventDialogControl(TriggerCreate("LibapxWaygateDialogClicked"), c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);

	//The only thing that needs an active runtime.
	TriggerAddEventTimePeriodic(TriggerCreate("LibapxTrigTicker"), .01, c_timeGame);


}

// LibapxPLayerEventsInitiallize
// ==========================
// events that need to be initialized individually for each player
void LibapxPLayerEventsInitiallize(int player) {
	// initialize player chat and chat command events
	TriggerAddEventChatMessage(TriggerCreate("LibapxProcessChatEvent") , player, "", false);
}
