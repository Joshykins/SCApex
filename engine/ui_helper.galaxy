//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================

//const string gv_LibapxUiDialogBacground = "Assets\\Textures\\uiBattlenetSettingsWindowframeSub01.dds";
//const string gv_LibapxUiDialogBORDER = "Assets\\Textures\\uiBattleFrameSummaryMetalProtoss.dds";
//const string gv_LibapxUiDialogButton = "Assets\\Textures\\uiMissionHackingbuttonglowNormaloverpressedoverProtoss.dds"; // for normal and hover

// default image path used for ui dialog background/border styles
// to ensure the Apex ui has a consistent theme
const string gv_LibapxUiDialogBacground = "Apex\\Assets\\Textures\\apexUI.dds";
const string gv_LibapxUiDialogButton = "Apex\\Assets\\Textures\\apexUIButtons.dds"; // for normal and hover
const string gv_LibapxUiDialogButtonHOV = "Apex\\Assets\\Textures\\apexUIButtons.dds"; // for normal and hover
const string gv_LibapxUiSubpanelBackground = "Assets\\Textures\\ui_ingame_subpanel.dds";
const string gv_LibapxUiInfoImage = "Assets\\Textures\\ui_glues_icons_largebutton_info_highlight.dds";
const string gv_LibapxBlankImage = "Assets\\Textures\\blank.dds";
static const string gv_WhiteBoxBackground = "Assets\\Textures\\white32.dds";
static const string gv_ApexButtonBackground = "Apex\\Assets\\Textures\\Button.dds";
static const string gv_ApexButtonBackgroundHov = "Apex\\Assets\\Textures\\ButtonHover.dds";

// text header styles
const string gv_LibapxUiHeader1 = "GlueButton";
const string gv_LibapxUiHeader2 = "DirectiveDisplay";
const string gv_LibapxUiHeader3 = "DebugTechPanelLabel";
const string gv_LibapxUiHeader4 = "Header18";
const string gv_LibapxUiHeader5 = "Header16";
const string gv_LibapxUiShining = "CreditsLabel";

// generic icons
const string gv_LibapxUiIconSearch = "Assets\\Textures\\ui-editoricon-toolbar_find.dds";
const string gv_LibapxUiIconGo = "Assets\\Textures\\ui-editoricon-dataTypes_movers.dds";
const string gv_LibapxUiIconReset = "Assets\\Textures\\ui-editoricon-general_undo.dds";
const string gv_LibapxUiIconX = "Assets\\Textures\\ui-editoricon-previewer_delete.dds";
const string gv_LibapxUiIconPlus = "EditorData\\Images\\DataAdd.tga";
const string gv_LibapxUiIconMinus = "EditorData\\Images\\ToolbarDeleteValue.tga";
const string gv_LibapxUiIconLeft = "Assets\\Textures\\ui-editoricon-previewer_timeline_back.dds";
const string gv_LibapxUiIconRight = "Assets\\Textures\\ui-editoricon-previewer_timeline_forward.dds";

//LibapxUiStartupPanel
//========================
//Switches to the target panel for the given player
void LibapxUiSwitchtoPanel(int panelIndex, int player);


// LibapxCreateDialogBtn
// =========================
// Creates a dialog control button for a given dialog and sets default style
int LibapxCreateDialogBtn(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string tooltip, string btnText );

// LibapxCreateDialogBtn
// =========================
// Creates a dialog control button for a given dialog and makes it invisible
int LibapxCreateDialogBtnInvis(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string tooltip, string btnText );

// LibapxCreateDialogBtnIcon
// ===================
// Creates a static image "icon" using a desaturated image dialog control
// anchored to the center of the input "btn" dialog control (can actually
// be any type of dialog control, not just a button)
int LibapxCreateDialogBtnIcon(int dialog, int btn, int width, int height, string icon);

//Color btn
int LibapxCreateDialogBtnIconColored(int dialog, int btn, int width, int height, string icon, color btnColor);

// LibapxCreateDialogBtnIconColoredTitle
// ====
// Inbuild offset
int LibapxCreateDialogBtnIconColoredTitle(int dialog, int btn, int width, int height, string icon, color btnColor) {
	int img = libNtve_gf_CreateDialogItemImage(
		dialog,
		 width, height,
		  c_anchorCenter, 0, 0, 
		  StringToText(""), 
		  icon, c_triggerImageTypeNormal, false, 
		  btnColor, 
		  c_triggerBlendModeNormal);
	DialogControlSetPositionRelative(img, PlayerGroupAll(), c_anchorCenter, btn, c_anchorCenter, 0, 0);
	return img;
}

// LibapxCreateDialog
// ================
// Creates a dialog and sets its background style to default Apex ui frame
int LibapxCreateDialog(int width, int height, int anchor, int offsetX, int offsetY ) {
	int frame = DialogCreate(width, height, anchor, offsetX, offsetY, true);
	
	// set frame appearance
	DialogSetImage(frame, gv_LibapxUiDialogBacground);
	//libNtve_gf_CreateDialogItemImage(frame, width, height, c_anchorCenter, 0, 0, StringToText(""), gv_LibapxUiDialogBORDER, c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);


	return frame;
}

int LibapxCreateDialogInvis(int width, int height, int anchor, int offsetX, int offsetY ) {
	int frame = DialogCreate(width, height, anchor, offsetX, offsetY, true);
	
	// set frame appearance
	DialogSetImage(frame, gv_LibapxUiDialogBacground);
	DialogSetImageVisible(frame, false);
	//libNtve_gf_CreateDialogItemImage(frame, width, height, c_anchorCenter, 0, 0, StringToText(""), gv_LibapxUiDialogBORDER, c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);

	return frame;
}


//LibapxCreateDialogCloseBtn
//==========
//This creates an exit button for the target dialog
int LibapxCreateDialogCloseBtn(int dialog, int width, int height, int anchor, int offsetX, int offsetY) {
	int parrent;
	int btn;
	string icon = "Assets\\Textures\\sc2_ui_glues_icons_closebuttonhover.dds";
	if(anchor == c_anchorTop) {
		parrent = LibapxCreateDialogInvis(50, 50, anchor, offsetX+(width/2)+10, offsetY+15);
		btn = LibapxCreateDialogBtnInvis(parrent, 50,50,c_anchorCenter, 0,0,"Close","");
	}
	else {
		parrent = LibapxCreateDialogInvis(50, 50, anchor, offsetX+width-10, offsetY+15);
		btn = LibapxCreateDialogBtnInvis(parrent, 50,50,c_anchorCenter, 0,0,"Close","");
	}
	TriggerAddEventDialogControl(TriggerCreate("LibapxUiPanelToggleBtn"), c_playerAny, btn, c_triggerControlEventTypeClick);
	LibapxCreateDialogBtnIconColored(parrent, btn, 50,50,icon,Color(100,100,100));

	return parrent;
}

// LibapxCreateDialogLabel
// =================
// Creates a static label for a dialog with a given text style
int LibapxCreateDialogLabel(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string s, string style ) {
	int label = libNtve_gf_CreateDialogItemLabel(dialog, width, height, anchor, offsetX, offsetY, StringToText(s), ColorWithAlpha(0,0,0,0), false, 0);
	libNtve_gf_SetDialogItemStyle(label, style, PlayerGroupAll());

	return label;
}

// LibapxCreateDialogLabelWithColor
// =================
// Creates a static label for a dialog with a given text style
int LibapxCreateDialogLabelWithColor(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string s, string style, color c ) {
	int label = libNtve_gf_CreateDialogItemLabel(dialog, width, height, anchor, offsetX, offsetY, StringToText(s), c, false, 0);
	libNtve_gf_SetDialogItemStyle(label, style, PlayerGroupAll());

	return label;
}


// LibapxCreateDialogTitle
// =================
// Creates a title for a ui panel
int LibapxCreateDialogTitle(int dialog, int width, int height, int offsetX, int offsetY, string s, string style, int spread ) {
	int label = libNtve_gf_CreateDialogItemLabel(dialog, width, height, c_anchorTop, offsetX, offsetY, StringToText(s), ColorWithAlpha(0,0,0,0), false, 0);
	int imgl;
	int imgr;
	libNtve_gf_SetDialogItemStyle(label, style, PlayerGroupAll());

	//Create Images near it.
	// imgl = LibapxCreateDialogBtnInvis(dialog, 200, 0,c_anchorTop,offsetX-spread, offsetY-15, "","" );
	// imgr = LibapxCreateDialogBtnInvis(dialog, 200, 0,c_anchorTop,offsetX+spread, offsetY-15, "","" );
	// LibapxCreateDialogBtnIconColoredTitle(dialog, imgl, 200, 60,"Apex\\Assets\\Textures\\LeftHandSideTitle.png",Color(100,100,100));
	// LibapxCreateDialogBtnIconColoredTitle(dialog, imgr, 200, 60,"Apex\\Assets\\Textures\\RightHandSideTitle.png",Color(100,100,100));

	return label;
}

// LibapxCreateDialogLabel
// =================
// Creates a static label for a dialog with a given text style
int LibapxCreateDialogLabelText(int dialog, int width, int height, int anchor, int offsetX, int offsetY, text s, string style ) {
	int label = libNtve_gf_CreateDialogItemLabel(dialog, width, height, anchor, offsetX, offsetY, s, ColorWithAlpha(0,0,0,0), false, 0);
	libNtve_gf_SetDialogItemStyle(label, style, PlayerGroupAll());

	return label;
}

// LibapxCreateDialogBtn
// =========================
// Creates a dialog control button for a given dialog and sets default style
int LibapxCreateDialogBtn(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string tooltip, string btnText ) {
	int btn = libNtve_gf_CreateDialogItemButton(dialog, width, height, anchor, offsetX, offsetY, StringToText(tooltip), StringToText(btnText), "");
	libNtve_gf_SetDialogItemRenderPriority(btn, 513, PlayerGroupAll());

	// set background/border
	libNtve_gf_SetDialogItemImage(btn, gv_LibapxBlankImage, PlayerGroupAll());
	libNtve_gf_SetDialogItemImage2(btn, gv_ApexButtonBackground, PlayerGroupAll());

	libNtve_gf_SetDialogItemImageType(btn, c_triggerImageTypeBorder, PlayerGroupAll());

	return btn;
}
// LibapxCreateDialogBtnInvis
// =========================
// Creates a dialog control button for a given dialog and sets default style
int LibapxCreateDialogBtnInvis(int dialog, int width, int height, int anchor, int offsetX, int offsetY, string tooltip, string btnText ) {
	int btn = libNtve_gf_CreateDialogItemButton(dialog, width, height, anchor, offsetX, offsetY, StringToText(tooltip), StringToText(btnText), "");
	libNtve_gf_SetDialogItemRenderPriority(btn, 513, PlayerGroupAll());
	

	// set background/border
	libNtve_gf_SetDialogItemImage(btn, "Assets\\Textures\\blank.dds", PlayerGroupAll());
	libNtve_gf_SetDialogItemImage2(btn, "Assets\\Textures\\blank.dds", PlayerGroupAll());
	libNtve_gf_SetDialogItemImageType(btn, c_triggerImageTypeBorder, PlayerGroupAll());

	return btn;
}

// LibapxCreateDialogPortrait
// =========================
// Creates a dialog control portrait for a given dialog and sets default style.
//   -> Setting render type to LDR (c_triggerRenderTypeLDR) is required so that
//   the portrait will render above its parent dialog (by default, portraits
//   will render behind)
int LibapxCreateDialogPortrait(int dialog, int width, int height, int anchor, int offsetX, int offsetY) {
	int item = DialogControlCreate(dialog, c_triggerControlTypePortrait);
	DialogControlSetSize(item, PlayerGroupAll(), width, height);
	DialogControlSetPosition(item, PlayerGroupAll(), anchor, offsetX, offsetY);
	libNtve_gf_SetDialogItemRenderType(item, c_triggerRenderTypeLDR, PlayerGroupAll());
	libNtve_gf_SetDialogItemBorderImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	libNtve_gf_SetDialogItemBackgroundVisible(item, false, PlayerGroupAll());

	return item;
}

// LibapxCreateDialogList
// =====================
// Creates a dialog control list and sets default styles
int LibapxCreateDialogList(int dialog, int width, int height, int anchor, int offsetX, int offsetY) {
	int item = DialogControlCreate(dialog, c_triggerControlTypeListBox);
	DialogControlSetSize(item, PlayerGroupAll(), width, height);
	DialogControlSetPosition(item, PlayerGroupAll(), anchor, offsetX, offsetY);
	libNtve_gf_SetDialogItemImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	return item;
}

// LibapxCreateDialogEditbox
// =====================
// Creates a dialog control editbox and sets default styles
int LibapxCreateDialogEditbox(int dialog, int width, int height, int anchor, int offsetX, int offsetY) {
	int item = DialogControlCreate(dialog, c_triggerControlTypeEditBox);
	DialogControlSetSize(item, PlayerGroupAll(), width, height);
	DialogControlSetPosition(item, PlayerGroupAll(), anchor, offsetX, offsetY);
	libNtve_gf_SetDialogItemBorderImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	libNtve_gf_SetDialogItemImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	return item;
}

// LibapxCreateDialogCheckbox
// =====================
// Creates a dialog control checkbox and sets default styles
int LibapxCreateDialogCheckbox(int dialog, int width, int height, int anchor, int offsetX, int offsetY) {
	int item = DialogControlCreate(dialog, c_triggerControlTypeCheckBox);
	DialogControlSetSize(item, PlayerGroupAll(), width, height);
	DialogControlSetPosition(item, PlayerGroupAll(), anchor, offsetX, offsetY);
	libNtve_gf_SetDialogItemBorderImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	//libNtve_gf_SetDialogItemImage(item, gv_LibapxUiSubpanelBackground, PlayerGroupAll());
	return item;
}

// LibapxCreateDialogBtnIcon
// ===================
// Creates a static image "icon" using a desaturated image dialog control
// anchored to the center of the input "btn" dialog control (can actually
// be any type of dialog control, not just a button)
int LibapxCreateDialogBtnIcon(int dialog, int btn, int width, int height, string icon) {
	int img = libNtve_gf_CreateDialogItemImage(dialog, width, height, c_anchorCenter, 0, 0, StringToText(""), icon, c_triggerImageTypeNormal, false, Color(100, 100, 100), c_triggerBlendModeNormal);
	DialogControlSetPositionRelative(img, PlayerGroupAll(), c_anchorCenter, btn, c_anchorCenter, 0, 0);
	libNtve_gf_SetDialogItemDesaturated(img, true, PlayerGroupAll());
	return img;
}

int LibapxCreateDialogBtnIconColored(int dialog, int btn, int width, int height, string icon, color btnColor) {
	int img = libNtve_gf_CreateDialogItemImage(
		dialog,
		 width, height,
		  c_anchorCenter, 0, 0, 
		  StringToText(""), 
		  icon, c_triggerImageTypeNormal, false, 
		  btnColor, 
		  c_triggerBlendModeNormal);
	DialogControlSetPositionRelative(img, PlayerGroupAll(), c_anchorCenter, btn, c_anchorCenter, 0, 0);
	return img;
}



int LibapxCreateDialogBtnIconColoredAnchor(int dialog, int btn, int anchor, int width, int height, string icon, color btnColor) {
	int img = libNtve_gf_CreateDialogItemImage(
		dialog,
		 width, height,
		  anchor, 0, 0, 
		  StringToText(""), 
		  icon, c_triggerImageTypeNormal, false, 
		  btnColor, 
		  c_triggerBlendModeNormal);
	libNtve_gf_SetDialogItemDesaturated(img, true, PlayerGroupAll());
	libNtve_gf_SetDialogItemDesaturationColor(img, btnColor, PlayerGroupAll());
	DialogControlSetPositionRelative(img, PlayerGroupAll(), anchor, btn, anchor, 0, 0);
	return img;
}
