//=========================================================
//		Apex Roleplaying Engine
//		Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================



void LibapxApiStartReading(int p) {
    gv_LibapxPlayer[p].apiReading = true;
    LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | Listening");
}

void LibapxApiStopReading(int p) {
    string apiString = gv_LibapxPlayer[p].apiStringInput;
    gv_LibapxPlayer[p].apiReading = false;
    gv_LibapxPlayer[p].apiStringInput = "";
    LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | Running And Stopping Listening");
    LibapxProcessChat( apiString, p, UnitGroupSelected(p));
}



void libpaxApiUpdate(int p) {
    string stream;
    string globalStream;
    string desiredKey;
    int i;
    string apiString;

    if(!gv_LibapxPlayer[p].banksloaded) {
        return;
    }

    BankReload(gv_LibapxPlayer[p].bankStorage);
    BankWait(gv_LibapxPlayer[p].bankStorage);

    if(BankSectionExists(gv_LibapxPlayer[p].bankStorage, "Api")) {

        desiredKey = "stream";
        if(!BankKeyExists(gv_LibapxPlayer[p].bankStorage, "Api", desiredKey)) {
            LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | Stream Not Found");
            BankValueSetFromString(gv_LibapxPlayer[p].bankStorage, "Api", desiredKey, "");
            BankSave(gv_LibapxPlayer[p].bankStorage);
            LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | Creating Stream Key");
            return;
        }
        

    
        stream = BankValueGetAsString(gv_LibapxPlayer[p].bankStorage, "Api", desiredKey);
        BankValueSetFromString(gv_LibapxPlayer[p].bankStorage, "Api", desiredKey, "");

        if(stream == "") {
            return;
        }

        if(stream == "apiRun") {
            LibapxPrintOutput(p, "<c val=\"ffee00\">API CMD</c> | Running Buffer");
            apiString = gv_LibapxPlayer[p].apiStringInput;
            gv_LibapxPlayer[p].apiStringInput = "";
            
            LibapxProcessChat( apiString, p, UnitGroupSelected(p));
            BankSave(gv_LibapxPlayer[p].bankStorage);
            return;
        } else if(stream == "apiStop") {
            LibapxPrintOutput(p, "<c val=\"ffee00\">API CMD</c> | Running Buffer and Stopping");
            LibapxApiStopReading(p);
            BankSave(gv_LibapxPlayer[p].bankStorage);
            return;
        } else if(stream == "apiLength") {
            LibapxPrintText(PlayerGroupSingle(p), StringToText("> <c val=\"ffee00\">API CMD</c> | Buffer length ") + FormatNumber(StringLength(gv_LibapxPlayer[p].apiStringInput)));
            
            BankSave(gv_LibapxPlayer[p].bankStorage);
            return;
        }


        
        gv_LibapxPlayer[p].apiStringInput += stream;
    }
    else {
        LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | API Section Not Found");
        LibapxPrintOutput(p, "<c val=\"00eeff\">API</c> | Creating API Section in <c val=\"ff0000\">ApexBank</c>");
        BankSectionCreate(gv_LibapxPlayer[p].bankStorage, "Api");
    }
    BankSave(gv_LibapxPlayer[p].bankStorage);
}



void LibapxApiStart() {
    int i;
    int p;


    while(true) {
        
        for (i = 1; i <= PlayerGroupCount(PlayerGroupActive()); i += 1) {
           
            p = PlayerGroupPlayer(PlayerGroupActive(), i);
            if(!PlayerIsUnderAIControl(p) && gv_LibapxPlayer[p].apiReading) {
                libpaxApiUpdate(p);
            }
        }

        Wait(1, c_timeReal);
    }

}